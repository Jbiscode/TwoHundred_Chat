name: chatCICD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ github.ref }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ github.ref }}-node-modules-
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
            npm ci

      - name: Env File add
        run: |
          npm install -g pm2
          touch .env
          echo ${{ secrets.ENV_FILE }} >> .env
          cat .env
          ls -alrth

      - name: SSL Certificate INPUT
        run: |
          touch certificate.crt
          echo "${{ secrets.SSL_MIXED_CERTIFICATE_CRT }}" | base64 -d >> mixed_certificate.crt
          touch private.key
          echo "${{ secrets.SSL_PRIVATE_KEY }}" | base64 -d >> private.key

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ github.sha }} -f Dockerfile .
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ github.sha }}



  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: NCP login & Docker image pull and run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          key: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            docker stop ${{ secrets.DOCKER_IMAGE_NAME }} || true
            docker rm ${{ secrets.DOCKER_IMAGE_NAME }} || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ github.sha }}
            docker run -d -p 5000:5000 --name ${{ secrets.DOCKER_IMAGE_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ github.sha }}

